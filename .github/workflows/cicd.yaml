name: CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  CONTAINER_REGISTRY: KITScontainer
  AZURE_SUBSCRIPTION: ${{ secrets.AZURE_SUBSCRIPTION }}
  ACR_IMAGE_PATH: ${{ secrets.ACR_LOGIN_SERVER }}/graph-generator:${{ github.run_number }}
  EDGE_DEVICE_1_ID: microservice-edge-device-1
  EDGE_DEVICE_1_HOSTNAME: microservice-edge-device-1-hostname
  EDGE_DEVICE_1_SAS_TOKEN: ${{ secrets.EDGE_DEVICE_1_SAS_TOKEN }}
  EDGE_DEVICE_2_ID: microservice-edge-device-2
  EDGE_DEVICE_2_HOSTNAME: microservice-edge-device-2-hostname
  EDGE_DEVICE_2_SAS_TOKEN: ${{ secrets.EDGE_DEVICE_2_SAS_TOKEN }}
  EDGE_DEVICE_3_ID: microservice-edge-device-3-id
  EDGE_DEVICE_3_HOSTNAME: microservice-edge-device-3-hostname
  EDGE_DEVICE_3_SAS_TOKEN: ${{ secrets.EDGE_DEVICE_3_SAS_TOKEN }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Login to ACR
        uses: Azure/docker-login@v1
        with:
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}

      # - name: Build backend docker image
      #   run: |
      #     cd ./Graph Generator Microservice
      #     docker build -t ${{env.ACR_IMAGE_PATH}}} -f Dockerfile .
      #     # docker push ${{env.ACR_IMAGE_PATH}}

      - name: Build and push Temperature Data Collector Microservice
        uses: docker/build-push-action@v2
        with:
          context: ./Temperature Data Collector Microservice
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/temperature-data-collector:${{ github.sha }}
          registry: ${{ env.CONTAINER_REGISTRY }}
          repository: temperature-data-collector

      - name: snyk test
        continue-on-error: true
        run: |-
          npm install snyk -g
          snyk auth e6b5719c-46fa-4dd7-8cf1-50ebd68923ae
          snyk container test ${{ secrets.ACR_LOGIN_SERVER }}/temperature-data-collector:${{ github.sha }}
          snyk container monitor --app-vulns ${{ secrets.ACR_LOGIN_SERVER }}/temperature-data-collector:${{ github.sha }}

      # - name: Run Snyk to check Docker image for vulnerabilities
        # Snyk can be used to break the build when it detects vulnerabilities.
        # In this case we want to upload the issues to GitHub Code Scanning
        # continue-on-error: true
        # uses: snyk/actions/docker@14818c4695ecc4045f33c9cee9e795a788711ca4
        # env:
        # In order to use the Snyk Action you will need to have a Snyk API token.
        # More details in https://github.com/snyk/actions#getting-your-snyk-token
        # or you can signup for free at https://snyk.io/login
        #   SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        # with:
        #   image: iot-backend
        #   args: --file=./EdgeSolution/modules/BackendModule/Dockerfile.amd64

          
      - name: Build and push Graph Generator Microservice
        uses: docker/build-push-action@v2
        with:
          context: ./water sprinkler
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/water sprinkler:${{ github.sha }}
          registry: ${{ env.CONTAINER_REGISTRY }}
          repository: water-sprinkler

